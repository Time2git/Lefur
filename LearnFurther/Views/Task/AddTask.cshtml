@using LearnFurther.ViewModels
@model AddTaskViewModel

<div>
<form method="post" asp-controller="Task" asp-action="AddTask">
    <div id="content" style="max-height:500px">
        <div asp-validation-summary="ModelOnly"></div>
        <div class="form-group">
            <label asp-for="Title"></label><br />
            <input class="form-control" asp-for="Title" />
            <span asp-validation-for="Title"></span>
        </div>
        <div class="form-group">
            <label class="form-label" asp-for="Description"></label><br />
            <textarea class="form-control" asp-for="Description" rows="3" style="resize:none"></textarea>
            <span asp-validation-for="Description"></span>
        </div>
        <div class="form-group">
            <label asp-for="Types">Выберите тип задания</label><br />
            <select asp-for="Types" asp-items="Html.GetEnumSelectList<LearnFurther.ViewModels.TaskTypes>()" onchange="Change(this)"></select>
            <br />
        </div>
        <button class="btn btn-outline-dark mt-3 mb-3" id="butt" onclick="addInput()" type="button">Добавить вопрос</button>
        <button class="btn btn-outline-dark mt-3 mb-3" type="submit">Добавить задание</button>
    </div>
</form>
<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                При смене типа задания на задание с полным ответом, варианты ответов будут удалены.
            </div>
            <div class="modal-footer">
                <a type="submit" asp-controller="Account" asp-action="Login" class="btn btn-primary" id="myBtn" formmethod="get">Авторизоваться</a>
                <a type="button" asp-controller="Account" asp-action="Register" class="btn btn-primary">Зарегистрироваться</a>
            </div>
        </div>
    </div>
</div>
</div>

@section scripts{

<script>

    function Change(val) {
        if ((val.options[val.selectedIndex].text == "Задание с полным ответом") && (arr.size != 0)) {
            $('#modDialog').modal('show');
        };
    }

    var i = 0;
    var arr = new Map();


    function addInput() {
        var str = '<div class="d-flex justify-content-around row" id = ' + i + '><textarea class="form-control mt-2 mb-3 ml-3 mr-3" name = "Questions[' + i + '].Context" rows="1" style="resize:none"></textarea><button class="btn btn-outline-dark col-4 align-content-center" id="button' + i + '" onclick="addAnswer(this)" type="button">Добавить ответ</button></div>'

        butt.insertAdjacentHTML('beforebegin', str);
        i++;
    }

    function addAnswer(val) {
        let x;
        //alert(val.parentNode.id);
        let listId = val.parentNode.id;
        if (arr.has(listId)) {
            x = arr.get(listId);
            x += 1;
            arr.set(listId, x)
        }
        else {
            x = 0;
            arr.set(listId, x)
        }
        var str = '<div class="form-check col-sm-4"><input class="form-check-input" type="checkbox" id = Questions[' + listId + '].Answers[' + x + '].State name = Questions[' + listId + '].Answers[' + x + '].State value = "true"><input class="form-control ml-2 mb-2" name = Questions[' + listId + '].Answers[' + x + '].Content></div >'
        val.insertAdjacentHTML('beforebegin', str);
    }

</script>

}